version: '3.8'

services:
  # Migration service - runs before all other services
  migration:
    build:
      context: .
      dockerfile: Dockerfile
    command: python migrations/migration_runner.py
    environment:
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=botuser
      - DB_PASSWORD=botpassword123
      - DB_NAME=bot_marketplace
    depends_on:
      - db
    volumes:
      - ./migrations:/app/migrations
    restart: "no"  # Only run once, don't restart

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://botuser:botpassword123@db/bot_marketplace
      - REDIS_URL=redis://redis:6379/0
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_WEBHOOK_URL=${TELEGRAM_WEBHOOK_URL}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MODE=dev
    depends_on:
      - db
      - redis
      - migration  # Wait for migration to complete
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  celery:
    build: .
    command: celery -A utils.celery_app worker --loglevel=info --queues=default,bot_execution,futures_trading,maintenance,notifications,bot_execution_signal
    environment:
      - DATABASE_URL=mysql+pymysql://botuser:botpassword123@db/bot_marketplace
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - migration  # Wait for migration to complete
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  beat:
    build: .
    command: celery -A utils.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=mysql+pymysql://botuser:botpassword123@db/bot_marketplace
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
      - migration  # Wait for migration to complete
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword123
      MYSQL_DATABASE: bot_marketplace
      MYSQL_USER: botuser
      MYSQL_PASSWORD: botpassword123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis_db
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  mysql_data:
